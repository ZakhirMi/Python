# Для всех нечетных чисел диапазона [1, 1000]
# вычислить их куб
# вычислить сумму цифр куба
# если сумма цифр куба делится нацело на 7, то добавить в накопительную сумму исходное число.
# При решении задачи использовать только арифметические операции и цикл while.
# Не используем списки, функцию range, преобразование числа в строку/список.
# Ваш алгоритм должен корректно работать для всех чисел интервала от 1 до 1000, но и легко изменяться для другого диапазона чисел, например от 1 до 10000000.
# Формат вывода результата:
# Вывод на экран формить в виде: число ^3 = куб_числа; [сумма цифр куба] накопительная_сумма
# Например:
# 19 ^3 = 6859 [ 28 ] накоп. сумма: 19
# 31 ^3 = 29791 [ 28 ] накоп. сумма: 50
# 967 ^3 = 904231063 [ 28 ] накоп. сумма: 43106
# Примечание:
# число 19, 19 ^ 3 = 6859, сумма чисел 6 + 8 + 5 + 9 = 28 – делится нацело на 7. Поэтому 19 включаем в вывод.
# Сумма считается для самих чисел 19, 31, 43 и т.п. Не для кубов.

counter = 1
accumulate = 0
while counter <= 1000:
    cube = counter ** 3
    sum_cube = 0
    while cube != 0:
        sum_cube += cube % 10
        cube //= 10
    if sum_cube % 7 == 0:
        accumulate += counter
        print(counter, "^3 =", counter**3, [sum_cube], "накопительная_сумма:", accumulate)
    else:
        print(counter, "^3 =", counter**3, [sum_cube])
    counter += 2


